set.seed(1234567890)
x <- rnorm(5000)
vidurkis <- mean(x)
set.seed(1234567890)
x <- rnorm(5000)
vidurkis <- mean(x)
stand <- sd(x)
intervalas <- (\bar{X} - 3\hat{sd}):(\bar{X} + 3\hat{sd})
isskirtis <-
intervalas <- \bar{X} - 3\hat{sd}:\bar{X} + 3\hat{sd}
isskirtis <-
intervalas <- (bar{X} - 3*hat{sd}):(bar{X} + 3*hat{sd})
isskirtis <-
S_teor <- dnorm(x1,x2)
indeksai <- which((x < vidurkis - 3*stand) | (x > vidurkis + 3*stand))
indeksai <- which((x < vidurkis - 3*stand) | (x > vidurkis + 3*stand))
isskirtys <- x[indeksai]
indeksai <- which((x < vidurkis - 3*stand) | (x > vidurkis + 3*stand))
isskirtys <- x[indeksai]
names(isskirtys) = indeksai
isskirtys
indeksai <- which((x < vidurkis - 3*stand) | (x > vidurkis + 3*stand))
isskirtys <- x[indeksai]
names(isskirtys) = indeksai
isskirtys
naujasx <- x[-indeksai]
hist(naujasx)
atnaujintas <- x[-indeksai]  # sukūriamas naujas x, kuriame nebėra išskirčių
hist(atnaujintas, main = "Atnaujinto x Histograma", xlab = "su nauja reikšme x" )
require (RCurl)
data <- read.csv(text=getURL("https://raw.githubusercontent.com/1vbutkus/Econometrics1/master/Egzaminas/data.csv"), stringsAsFactors=FALSE)
df = read.csv('data.csv', stringsAsFactors=FALSE)
sapply(df, class)
Data<-read.csv("C:/Users/karol/Desktop/data.csv", header=TRUE)
sapply(df, class)
data <- read.csv("https://raw.githubusercontent.com/1vbutkus/Econometrics1/master/Egzaminas/data.csv", header=TRUE)
data <- read.csv("https://raw.githubusercontent.com/1vbutkus/Econometrics1/master/Egzaminas/data.csv", header=TRUE)
data
Data<-read.csv("C:/Users/karol/Desktop/Praktinė ekonometrija/Eko1/Egzaminas/data.csv", header=TRUE)
Data<-read.csv("C:/Users/karol/Desktop/Praktinė ekonometrija/Eko1/Egzaminas/data.csv", header = TRUE)
data <- read.table("C:/Users/karol/Desktop/Praktinė ekonometrija/Eko1/data.csv", skip = 7, sep = ";")
data1 <- read.csv()
data <- read.table("C:/Users/karol/Desktop/Praktinė ekonometrija/Eko1/Egzaminas/data.csv", skip = 7, sep = ";")
data1 <- read.csv()
data <- read.table("C:/Users/karol/Desktop/Praktinė ekonometrija/Eko1/Egzaminas/data.csv", skip = 7, sep = ";")
data1 <- read.csv()
data <- read.csv("C:/Users/karol/Desktop/Praktinė ekonometrija/Eko1/Egzaminas/data.csv", skip = 7, sep = ";")
data1 <- read.csv()
data <- read.table("C:/Users/karol/Desktop/data.csv", skip = 7, sep = ";")
data <- read.table("C:/Users/karol/Desktop/data.csv.txt", skip = 7, sep = ";")
data <- read.table("C:/Users/karol/Desktop/data.csv.txt", skip = 7, sep = ";")
data
data1 <- read.csv(text=getURL("https://raw.githubusercontent.com/1vbutkus/Econometrics1/master/Egzaminas/data.csv"), stringsAsFactors=FALSE, skip = 7))
data1 <- read.csv(text=getURL("https://raw.githubusercontent.com/1vbutkus/Econometrics1/master/Egzaminas/data.csv"), stringsAsFactors=FALSE, skip = 7)
data1 <- read.csv(text=getURL("https://raw.githubusercontent.com/1vbutkus/Econometrics1/master/Egzaminas/data.csv"), stringsAsFactors=FALSE, skip = 7)
data2
data1
data1 <- read.csv(text=getURL("https://raw.githubusercontent.com/1vbutkus/Econometrics1/master/Egzaminas/data.csv"), stringsAsFactors=FALSE, skip = 7, sep = ";")
data1
sapply(data1, class)
x1 = rnorm(10000, mean = 3, sd = sqrt(2))
x2 = rnorm(10000, mean = -1, sd = sqrt(3))
x = x1 + x2
x1 = rnorm(10000, mean = 3, sd = sqrt(2))
x2 = rnorm(10000, mean = -1, sd = sqrt(3))
x = x1 + x2
x
x1 = rnorm(10000, mean = 3, sd = sqrt(2))
x2 = rnorm(10000, mean = -1, sd = sqrt(3))
x = x1 + x2
x
plot(density(x))
sapply(data1, class)  # atskiriam kiekvieną stulpelį, kad galėtumėm atskirai koreguoti
data1
sapply(data1, class)  # atskiriam kiekvieną stulpelį, kad galėtumėm atskirai koreguoti
# Matome, kad kainos, ridos, amžiaus tipai yra blogi, turi būti integer.
data1 <- transform(data1, kaina = as.POSIXlt(kaina), galia = as.POSIXlt(galia))
?as.POSIXlt
sapply(data1, class)  # atskiriam kiekvieną stulpelį, kad galėtumėm atskirai koreguoti
# Matome, kad kainos, ridos, amžiaus tipai yra blogi, turi būti integer.
x$kaina <- as.POSIXlt(x$kaina,origin)
x$rida <- as.POSIXlt(x$rida,origin)
x$amzius <- as.POSIXlt(x$amzius,origin)
sapply(data1, class)  # atskiriam kiekvieną stulpelį, kad galėtumėm atskirai koreguoti
# Matome, kad kainos, ridos, amžiaus tipai yra blogi, turi būti integer.
data1$kaina <- as.POSIXlt(x$kaina,origin)
data1$rida <- as.POSIXlt(x$rida,origin)
data1$amzius <- as.POSIXlt(x$amzius,origin)
sapply(data1, class)  # atskiriam kiekvieną stulpelį, kad galėtumėm atskirai koreguoti
# Matome, kad kainos, ridos, amžiaus tipai yra blogi, turi būti integer.
data1$kaina <- as.POSIXlt(data1$kaina,origin)
data1$rida <- as.POSIXlt(data1$rida,origin)
data1$amzius <- as.POSIXlt(data1$amzius,origin)
summary(data1)
plot(data1)
cor(data1)
summary(data1)
plot(data1$kaina)
cor(data1)
summary(data1)
plot(data1$kaina, data1$rida, data1$amzius, data1$galia, data1$markesKodas)
cor(data1)
summary(data1)
plot(data1$kaina)
plot(data1$rida)
plot(data1$amzius)
plot(data1$galia)
plot(data1$markesKodas)
cor(data1)
plot(data1$kaina)
plot(data1$kaina, x = data1$markesKodas, y = data1$kaina)
summary(data1)
sapply(data1, class)  # atskiriam kiekvieną stulpelį, kad galėtumėm atskirai koreguoti
# Matome, kad kainos ir amžiaus tipai yra blogi, turi būti integer.
as.numeric(data1$kaina)
as.numeric(data1$amzius)
sapply(data1, class)  # atskiriam kiekvieną stulpelį, kad galėtumėm atskirai koreguoti
# Matome, kad kainos ir amžiaus tipai yra blogi, turi būti integer.
as.numeric(data1$kaina)
as.numeric(data1$amzius)
sapply(data1, class)
sapply(data1, class)  # atskiriam kiekvieną stulpelį, kad galėtumėm atskirai koreguoti
# Matome, kad kainos ir amžiaus tipai yra blogi, turi būti integer.
data1$kaina <- as.numeric(data1$kaina)
data1$amzius <- as.numeric(data1$amzius)
sapply(data1, class)
summary(data1)
summary(data1)
plot(data1)
summary(data1)
cor(data1)
?marginal
??marginal
x = rnorm(10000, mean = 2, sd = sqrt(5))
x1 = rnorm(10000, mean = 3, sd = sqrt(2))
x2 = rnorm(10000, mean = -1, sd = sqrt(3))
ktx = x1 + x2
plot(X, dnorm(X, mean = 2, sd = sqrt(5)))
plot(X, dnorm(x, mean = 2, sd = sqrt(5)))
plot(x, dnorm(x, mean = 2, sd = sqrt(5)))
plot(x, density(x, mean = 2, sd = sqrt(5)))
lines(density(ktX), col = 3)
lines(density(ktx), col = 3)
lines(density(ktx), col = 10)
lines(density(ktx), col = 50)
lines(density(ktx), col = 12)
lines(density(ktx), col = 7)
x = rnorm(10000, mean = 2, sd = sqrt(5))   # gauname bendrą x1 ir x2 x-ą, kurio reikšmės yra x1 ir x2 suma
x1 = rnorm(10000, mean = 3, sd = sqrt(2))
x2 = rnorm(10000, mean = -1, sd = sqrt(3))
x0 = x1 + x2    #
plot(x, dnorm(x, mean = 2, sd = sqrt(5)))
lines(density(x0), col = 7)   # nubrėžiame tankio grafiką
x = rnorm(10000, mean = 2, sd = sqrt(5))   # gauname bendrą x1 ir x2 x-ą, kurio reikšmės yra x1 ir x2 suma
x1 = rnorm(10000, mean = 3, sd = sqrt(2))
x2 = rnorm(10000, mean = -1, sd = sqrt(3))
x0 = x1 + x2    #
plot(x, dnorm(x, mean = 2, sd = sqrt(5)), ylab = "tankis", main = "Tankio grafikas")
lines(density(x0), col = 7)   # nubrėžiame tankio grafiką
plot(x, dnorm(x, mean = 2, sd = sqrt(5)))
lines(density(X), col = 7)   # nubrėžiame tankio grafiką
mean(x)
sd(x)
median(x)
plot(x, dnorm(x, mean = 2, sd = sqrt(5)))
lines(density(X), col = 7)   # nubrėžiame tankio grafiką
mean(x)
sd(x)
median(x)
plot(x, dnorm(x, mean = 2, sd = sqrt(5)))
lines(density(x), col = 7)   # nubrėžiame tankio grafiką
mean(x)
sd(x)
median(x)
plot(x, dnorm(x, mean = 2, sd = sqrt(5)), ylab = "tankis", main = "Tankio grafikas")
lines(density(x0), col = 7)   # nubrėžiame tankio grafiką
mean(x)
sd(x)
median(x)
mean(x0)
sd(x0)
median(x0)
