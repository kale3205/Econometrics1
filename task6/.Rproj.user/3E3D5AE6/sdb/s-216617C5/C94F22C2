{
    "collab_server" : "",
    "contents" : "## TASK 6\n\nVisų pirma nuskaitome duomenis : \n  \n  ```\nrequire (RCurl)\n\ndata <- read.csv(text=getURL(\"https://raw.githubusercontent.com/1vbutkus/Econometrics1/master/task6/R_programing_swirlResults.csv\"), stringsAsFactors=FALSE)\n```\n\nPasižiūrime ar visi duomenys nuskaityti ir kokiais tipais nuskaityti : \n  \n  ```\nclass(data)\n\npavadinimai <- colnames(data)\n\npavadinimai\n\nclass(data$X)\n\nclass(data$name)\n\nclass(data$takeTime)\n\nclass(data$sysUser)\n\nclass(data$sysName)\n\nclass(data$sysTime)\n\nclass(data$user)\n\nclass(data$course_name)\n\nclass(data$lesson_name)\n\nclass(data$question_number)  \n\nclass(data$correct)\n\nclass(data$attempt)\n\nclass(data$datetime)\n\nclass(data$skipped)\n```\n\nPastebėjome, kad kai kurie duomenys nuskaityti blogu tipu, todėl iš integer ir charakter tipų keičiame į datos tipą :\n  \n  ```\ndata$sysTime <- strptime(data$sysTime,\"%Y-%m-%d %H:%M:%S\") \n\ndata$datetime <- strptime(data$datetime,\"%Y-%m-%d %H:%M:%S\")\n\n```\n\nPastebime, kad duomenys, tokie kaip 'aaa', '1vbutkus', 'testas' yra nereikalingi, nes tai neidentifikuoti studentai, šiais pavadinimais, todėl ištriname šiuos duomenis : \n  \n  ```\nnew.data <- data[( data$user!=\"1vbutkus\" & data$user!=\"aaa\" & data$user!=\"testas\" ),]\n```\n\nPažiūrime naują sudarytą 'data' ar nebėra nereikalingų duomenų : \n  \n  ```\ntable(new.data$user)\n```\n\nDabar pažiūrėsime ar nėra dublikavimose šioje lentelėje : \n  \n  ```  \nsum(duplicated(new.data)) \n```\n\nPastebime, kad 3 studentai yra atlikę užduotis/klausimus su skirtingais vardais, todėl kiekvieno studento duomenis sudedame į vis atskirą :\n  \n  ```\nn <- length(new.data[(new.data$user==\"j\" | new.data$user==\"ju\" | new.data$user==\"juste\" | new.data$user==\"Juste\" ),(\"user\")])\n\nnew.data[(new.data$user==\"j\" | new.data$user==\"ju\" | new.data$user==\"juste\" | new.data$user==\"Juste\" ),(\"user\")]= c(replicate(n,\"justinasasnauskaite\"))\n\nm <- length(new.data[(new.data$user==\"gyse\" | new.data$user==\"gyse3054\" ),(\"user\")])\n\nnew.data[(new.data$user==\"gyse\" | new.data$user==\"gyse3054\" ),(\"user\")]=c(replicate(m,\"gyse3054\"))\n\nl <- length(new.data[(new.data$user==\"rokasalek\" | new.data$user==\"rokasaleks\" ),(\"user\")])\n\nnew.data[(new.data$user==\"rokasalek\" | new.data$user==\"rokasaleks\" ),(\"user\")]=c(replicate(l,\"rokasaleks\"))\n\n\n``` \n\nKai sutvarkėme ir suvienodinome studentų pavadinimus, galime pažiūrėti kas, kiek nepraleido klausimų :\n  \n  \n  ```\nno.skipping <- new.data[(new.data$user!=\"Dariukxas\" & new.data$user!=\"Domante Bulovaite\" & new.data$user!=\"gyse3054\" & new.data$user!=\"Greta\" & new.data$user!=\"gretajes\" & new.data$user!=\"justinasasnauskaite\" & new.data$user!=\"Karolina\" & new.data$user!=\"kestous\" & new.data$user!=\"ogadova\" & new.data$user!=\"ojautakaite\" & new.data$user != \"Raigardas\" & new.data$user!=\"rokasaleks\" & new.data$user!=\"SandraKozlovskaja\" & new.data$user!=\"simonalevickaite\" & new.data$user!=\"sindeivydas\"),]\n\ntable(no.skipping$user)\n\n```\n\n\nPagal gautus rezultatus jau matosi, kad kai kurių studentų nepraleidimų skirtumai yra labai akivaizdūs, todėl pradedame tikrinti šiuos žmonės, kurie nepraleido mažiausiaiarba iš viso nepraleido : aipe00, edba2903, emru3000, MildaPie, simona333, zagnyte378 :\n  \n  Taigi sudarėme naują lentelą, kuria pavadinau 'min.skip.data', tai lentelė, kurioje daugiausiai nepraleidusių klausimų studentų vardai ir nepraleistų klausimų kiekis : \n  \n  ```\nmin.skip.data <- new.data[ (new.data$user==\"aipe00\" | new.data $user==\"edba2903\" | new.data $user==\"emru3000\" | new.data $user==\"MildaPie\" | new.data $user==\"simona1234\" | new.data $user==\"zagnyte\"),]\n\ntable(min.skip.data$user)\n```\n\nIš tos praeitos lentelės padarome dar vieną lentelę, kurioje įtraukiame ir pamokų pavadinimus ir jų skaičių : \n  \n  ```\nname.less.data <- data.frame(min.skip.data$user, min.skip.data$lesson_name)\n\ntable(name.less.data)\n```\n\nIšimame besidubliuojančius duomenis : \n  \n  ```\nname.less.dublic <- name.less.data[!duplicated(name.less.data), ]\n\n```\nPanaudosime vieną funkciją, kurios dėka galime pamatyti kiek, koks studentas atliko užduočių. Gauname, kad aipe00, emru300, simona1234, zagnyte atliko visas 16 užduotis nepraleisdamos.\n\n\n```\ntable(name.less.dublic[,1])\n```\n\nKadangi gavome, kad aipe00, emru300, simona1234, zagnyte atliko visas 16 užduotis, mums reikia padaryti naują lentelę be jų, kad galėtumėme pažiūrėti, kas, kiek nepadarė pamokų :\n  \n  ```\nskip.new.data <- new.data[!(new.data$user==\"aipe00\" | new.data$user==\"emru3000\" | new.data$user==\"simona1234\" | new.data$user==\"zagnyte\"),]\n\n```\nPadarome naujos lentelės naujesnį variantą, kuriame nebūtų besidubliuojančių duomenų : \n  \n  ```\nskip.new.data1 <- data.frame(skip.new.data$user, skip.new.data$lesson_name)\n\nskip.new.data2 <- skip.new.data1[!duplicated(skip.new.data1), ]\n\n```\n\nPasižiūrime, kiek studentų atliko užduočių iš viso : \n  \n  ```\ntable(skip.new.data2[,1])\n```\n\nPatikriname, kiek iš tų padariusių užduotis studentų, praleido klausimų :\n  \n  ```\nskipping <- new.data[(new.data$skipped==TRUE),]\n\ntable(skipping$user) \n\n```\n\n\n\nSources : Ainos Petronytės pagalba ir Agnės Zavackaitės darbu ; \n\nhttps://github.com/opetchey/RREEBES/wiki/Reading-data-and-code-from-an-online-github-repository",
    "created" : 1475702042187.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "128277393",
    "id" : "C94F22C2",
    "lastKnownWriteTime" : 1475702053,
    "last_content_update" : 1475702053471,
    "path" : "C:/Users/karol/Desktop/Praktinė ekonometrija/Eko1/task6/task6.R",
    "project_path" : "task6.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}