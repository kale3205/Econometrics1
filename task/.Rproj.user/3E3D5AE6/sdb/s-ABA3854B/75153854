{
    "collab_server" : "",
    "contents" : "---\ntitle: \"task\"\nauthor: \"Karolina\"\ndate: '2016 m rugsėjis 16 d '\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Plotting World and Country maps in R\n\nBefore we begin, we are going to need a few packages. Try to load the following libraries:\nlibrary(maps)\nlibrary(mapdata)\n\n```{r , echo=FALSE}\nlibrary(maps)\nlibrary(mapdata)\t\t\n```\n    \n\nIf these packages loaded correctly, you can move to the world map section.\n\nIf one of the packages gives you an error message and fails to load you will need to install the missing package(s) using the commands\n\ninstall.packages(\"maps\")\ninstall.packages(\"mapdata\")\n\nThe mapdata package contains a highly detailed set of polygons that map out all the countries of the World. It contains around 2 million polygons and is based on data from the CIA World Data Bank II.\n\nTo plot a map, we intuitively use the map() function and call the worldHires data:\n\nmap('worldHires')\n\n```{r , echo=FALSE}\nmap('worldHires')\n```\n\t\t\nNOTE: This may take a moment to plot due to the high detail of the dataset bring plotted\n\nThe command above gives you a plot of the World centered around the GMT timezone. If you would prefer a map centered around the International Date line then use\n\nmap('world2Hires')\n\n```{r , echo=FALSE}\nmap('world2Hires')\n```\n\n## Plotting Countries\n\nWe can select an individual country to plot, such as Italy, by listing the countries we want to plot after the \"worldHires\" data we are using:\n\nmap('worldHires','Italy')\n\n```{r , echo=FALSE}\nmap('worldHires','Italy')\n```\n\n\nIt's worth noting that countries that you list are not case-sensitive. The software will also try to match and plot all countries that start with whatever you type. For example, if you typed\n\nmap('worldHires','ch')\n\n```{r , echo=FALSE}\nmap('worldHires','ch')\n```\n\n\nthen you will end up with a plot of Chile, China, and any other countries that begin with the letters Ch... Entering '' as the country you want to plot will simply plot every country.\n\n## Plotting the UK/British Isles\n\nI'll demonstrate how to do a plot of the UK (or the British Isles to be more accurate) for three reasons. Firstly, as a way to demonstrate that you can specify multiple countries to plot. Secondly, to explain why some countries appear to plot much smaller than they should. And finally, to point out a pitfall for anyone wanting a plot of the British Isles.\n\nFirstly, to plot multiple countries, simply list the countries in a vector.\n\nmap('worldHires',\n    c('UK', 'Ireland', 'Isle of Man','Isle of Wight', 'Wales:Anglesey'))\n    \n```{r , echo=FALSE}\nmap('worldHires',\n    c('UK', 'Ireland', 'Isle of Man','Isle of Wight', 'Wales:Anglesey'))\n```\n\n    \nYou'll notice that it looks very small - This is the second problem I wanted to address. It's actually plotting islands all around the world the belonging to the UK. They are just relatively small so you can't see them.\n\nTo focus on just the British Isles we can limit the plot area by setting the longitudes and lattitudes to plot within:\n\nmap('worldHires',\n\t\tc('UK', 'Ireland', 'Isle of Man','Isle of Wight'),\n\t\txlim=c(-11,3), ylim=c(49,60.9))\t\n\t\t\n\n```{r , echo=FALSE}\nmap('worldHires',\n\t\tc('UK', 'Ireland', 'Isle of Man','Isle of Wight'),\n\t\txlim=c(-11,3), ylim=c(49,60.9))\t\n```\n\nThe third issue I wanted address is something I've already fixed in the demonstrations you've just seen. You may have noticed that I can't just list the UK and Ireland to get all of the British Isles on it own. You also need to individually add the Isle of Man and the Isle of Wight. But this isn't actually everything, which had me completely stumped for a while as I tried to work out why a small area of land was missing. That area of land was Anglesey - an island on the coast of Wales. It wasn't easy to find in the map's data either, because it's saved under the name \"Wales:Anglesey\".\n\nSource : https://www.students.ncl.ac.uk/keith.newman/r/maps-in-r#setUp\n",
    "created" : 1474008682495.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3050001021",
    "id" : "75153854",
    "lastKnownWriteTime" : 1474008713,
    "last_content_update" : 1474008713858,
    "path" : "C:/Users/karol/Desktop/Praktinė ekonometrija/Eko1/task/task.Rmd",
    "project_path" : "task.Rmd",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}